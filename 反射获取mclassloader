public  static void replaceclassloader(Context context,ClassLoader dexclassloader) throws ClassNotFoundException {
        ClassLoader pathclassloader = MainActivity.class.getClassLoader();
        Class Activitymethod = pathclassloader.loadClass("android.app.ActivityThread");
        try {
            Method currentactivitymethod = Activitymethod.getDeclaredMethod("currentActivityThread");
            Object activityThreadobj = currentactivitymethod.invoke(null);
            // final ArrayMap<String, WeakReference<LoadedApk>> mPackages = new ArrayMap<>();
            Field mPackages =Activitymethod.getDeclaredField("mPackages");
            mPackages.setAccessible(true);
            ArrayMap mPackagesobj = (ArrayMap) mPackages.get(activityThreadobj);
            String packagename = context.getPackageName();
            WeakReference wr = (WeakReference) mPackagesobj.get(packagename);
            Object loadedobj= wr.get();
            // android/app/LoadedApk.java
            Class loadapkclass = pathclassloader.loadClass("android.app.LoadedApk");
            Field mclassloaderfield = loadapkclass.getDeclaredField("mClassLoader");
            mclassloaderfield.setAccessible(true);
           Object mclassloader = mclassloaderfield.get(loadedobj);
            Log.e("yyf", "replaceclassloader:mclassloader "+mclassloader.toString());
            mclassloaderfield.set(loadedobj,dexclassloader);


        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException | NoSuchFieldException e) {
            e.printStackTrace();
        }

    }
